//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MakaoGraphicsRepresentation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MakingMoveDescriptionResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MakingMoveDescriptionResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MakaoGraphicsRepresentation.Properties.MakingMoveDescriptionResource", typeof(MakingMoveDescriptionResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak zagrywać karty?.
        /// </summary>
        internal static string ChoosenCardsHeading {
            get {
                return ResourceManager.GetString("ChoosenCardsHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Każda wybrana przez Ciebie karta, która pasuje do aktualnego kontekstu gry zostanie wyświetlona w kontrolce altualnie wybranych przez Ciebie kart do zagrania w bieżącym ruchu. Karty pojawią sie tutaj w dokładnie takiej kolejności, w jakiej zaznaczałeś je w kontrolce Twoich kart. Jeśli pojawi sie tutaj chociaż jedna karta, pojawi się także przycisk z opisem &quot;Wykonaj ruch&quot; - to właśne ten przycisk powinieneś wcisnąć, żeby definitywnie potwierdzić karty, które chcesz w tym ruchu wyłożyć na stół..
        /// </summary>
        internal static string ChoosenCardsText01 {
            get {
                return ResourceManager.GetString("ChoosenCardsText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W przypadku trybu postojów, kiedy inny gracz wyłożył na stół czwórkę, i teraz nastała Twoja kolej ruchu, to wtedy gdy masz w rękach czwórkę, lub jokera, będziesz miał możliwość dobrowolnego wyboru czekania, zamiast położenia następnej czwórki na stół. W tym przypadku, w miejscu przycisku &quot;Wykonaj ruch&quot;, pojawi się inny: &quot;Czekaj...&quot;. Wciskając ten przycisk, wyrazisz chęć czekania kolejek..
        /// </summary>
        internal static string ChoosenCardsText02 {
            get {
                return ResourceManager.GetString("ChoosenCardsText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zmiana jokera (pierwsza karta z talii).
        /// </summary>
        internal static string FirstCardJokerChangeHeading {
            get {
                return ResourceManager.GetString("FirstCardJokerChangeHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli w trybie bitwy będziesz zmuszony wziąć karty z talii i pierwszą z nich okaże się joker, wówczas możesz go zagrać. Jeśłi się na to zdecydujesz, będziesz musiał zmienić go w inną kartę. Okno przedstawione na zdjęciu po prawej, to okno wyboru karty, w którą możesz zmienic jokera. Tutaj nie ma listy wszystkich kart, a jedynie lista kart, w które możesz jokera zmienić, i które pasują do bieżącego kontekstu gry. Czyli jeśli np. kartą, któa leży szczycie stosu kart ze stołu jest dwójka pik, to w liście dostę [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FirstCardJokerChangeText01 {
            get {
                return ResourceManager.GetString("FirstCardJokerChangeText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ponadto, jeśli w standardowym trybie gry weźmiesz kartę, i okaże się nią joker - masz dokładnie takie same możliwości. Dodatkowo, jeśli zmienisz jokera w waleta, to pojawi się opcja wyboru żądanej figury, a jeśli w asa, to pojawi się opcja wyboru żądanego koloru..
        /// </summary>
        internal static string FirstCardJokerChangeText02 {
            get {
                return ResourceManager.GetString("FirstCardJokerChangeText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joker jako pierwsza karta w talii (tryb bitwy).
        /// </summary>
        internal static string FirstCardJokerHeading {
            get {
                return ResourceManager.GetString("FirstCardJokerHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli na danym etapie gry, aktywny jest tryb bitwy, następuje Twoja kolej na wykonanie ruchu, a Ty nie masz w rękach kart, które mógłbyś położyć na stole, wówczas musisz wziąż karty z talii. Jeśli masz szczęście, może sdażyć się tak, że pierwszą kartą jaka jest w stosie kart w talii jest joker. Jeśli tak się stanie, na ekranie pojawi się okno - takie jak na zdjęciu po prawej. Wówczas masz możliwość wykożystania tego jokera (zmieniając go w inną kartę), lub anulowanie tego i wzięcia pozostałej liczby kart. O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FirstCardJokerText01 {
            get {
                return ResourceManager.GetString("FirstCardJokerText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli zdecydujesz się zagrać tego jokera, wówczas musisz wcisnąc przycisk &quot;Zmień jokera&quot;, spowoduje to pojawienie sie kolejengo okna, o którym na następnej stronie. Po wyborze, w tym oknie pojawi sie grafika wybranej przez Ciebie karty, a Ty będziesz mógł ją zagrać i dzięki temu nie przegrasz bitwy, a będzie ona toczyc się dalej..
        /// </summary>
        internal static string FirstCardJokerText02 {
            get {
                return ResourceManager.GetString("FirstCardJokerText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Koniec gry.
        /// </summary>
        internal static string GameEndedHeading {
            get {
                return ResourceManager.GetString("GameEndedHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gra kończy się wtedy, gdy tylko jeden gracz ma jakieś karty w rękach, a pozostali gracze nie mają już kart. Wówczas na ekranie pojawi okno, którego zdjęcie jest przedstawione niżej. Przedstawione są tutaj pozycje, jakie zajęli gracze, a także liczba gier, które zagrali, oraz liczba gier, w których zwyciężyli (gracz, który jako pierwszy położy na stole wszystkie karty, zwycięża). Kliknięcie przycisku &quot;Zamknij&quot; powoduje powrót do głównego okna aplikacji..
        /// </summary>
        internal static string GameEndedText01 {
            get {
                return ResourceManager.GetString("GameEndedText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string GameEndedText02 {
            get {
                return ResourceManager.GetString("GameEndedText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kiedy nie można wykonać ruchu?.
        /// </summary>
        internal static string ImpossibilityOfMoveHeading {
            get {
                return ResourceManager.GetString("ImpossibilityOfMoveHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analogicznie do sytuacji w której możesz wykonac ruch (jest Twoja kolej), ruchu nie możesz wykonać, jesli to kolej innego gracza. Tak jak twoja nazwa jest podświetlona na złoto, kiedy to Twoja kolej na wykonanie ruchu, tak w przeciwnym przypadku, Twoja nazwa ma niebieskie podświetlenie. Ponadto, kontrolka przedstawiająca Twoje karty nie jest aktywna - po najechaniu na poszczególne karty myszą, nie zauważysz żadnej reakcji..
        /// </summary>
        internal static string ImpossibilityOfMoveText01 {
            get {
                return ResourceManager.GetString("ImpossibilityOfMoveText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Poniższe zdjęcie przedstawia właśnie taką sytuację - podświetlenie Twojej nazwy jest niebieskie, a najechanie myszą na poszczególne karty, nie powoduje żadnej reakcji..
        /// </summary>
        internal static string ImpossibilityOfMoveText02 {
            get {
                return ResourceManager.GetString("ImpossibilityOfMoveText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zmiana jokera w Twoich kartach.
        /// </summary>
        internal static string JokerChangeHeading {
            get {
                return ResourceManager.GetString("JokerChangeHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli to Twoja kolej na wykonanie ruchu, a masz w kartach jokera, którego chciałbyć wykorzystać, musisz najpierw go zmienić w inną kartę. Jokera samego w sobie nie można połozyć na stole - musisz najpierw zdefiniować, w jaką kartę go zmieniasz. Żeby to zrobić, kliknij na karcie jokera prawym przyciskiem myszy. Na keranie pojawi sie okno, krego zdjęcie znajduje się po prawej stronie. W tym oknie definiujesz, w jaką kartę chcesz zmienić jokera. Najpierw kolor - po wybraniu koloru, pojawią się figury, a potem  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JokerChangeText01 {
            get {
                return ResourceManager.GetString("JokerChangeText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dopiero po wybraniu i koloru i figury, możesz potwierdzić zmianę - przyciskiem &quot;OK&quot;. Oczywiście, możesz anulować zmianę - przycisk &quot;Anuluj&quot;. Po pomyślnej zmianie jokera w inną kartę, na lewym boku karty pojawia sie napis &quot;joker&quot;, ale o tym szerzej na następnej stronie. Jeśli zmienioną kartę, chcesz przywrócić z powrotem do postaci jokera - kliknij na tej karcie prawym przyciskiem myszy..
        /// </summary>
        internal static string JokerChangeText02 {
            get {
                return ResourceManager.GetString("JokerChangeText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak położyć na stole więcej niż jedną kartę?.
        /// </summary>
        internal static string MoreThanOneCardHeading {
            get {
                return ResourceManager.GetString("MoreThanOneCardHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli spróbujesz wyłożyć na stół kartę, która nie pasuje do bierzącego statusu gry lub nie pasuje do ostatniej karty wyłożonej na stół - czyli klikniesz jedną ze swoich kart, która nie spełnia tych warunków, nic się nie stanie. Natomiast jeśli klikniesz odpowiednią kartę (pasującą do kontekstu), wówczas karta ta wyświetli się w kontrolce aktualnie wybranych kart (następna strona), oraz na tej karcie, w kontrolce Twoich kart zostanie wyświetlone zielone obramowanie. Dodatkowo, automatycznie wyszarzone zostan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MoreThanOneCardText01 {
            get {
                return ResourceManager.GetString("MoreThanOneCardText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W związku z tym, możesz także dobrać inne karty, które nie zostały wyszarzone i które nie mają jeszcze dodanego zielonego obramowania. W praktyce, nie ma limitu liczby kart, które możesz położyć na stół jednym ruchem. Poniższe zdjęcie przedstawia moment wybierania dwóch dziewiątek jako karty do wyłożenia na stół. Zaznaczenie możesz całkowicie anulować, klikając przycisk &quot;Resetuj zaznaczenie&quot; - widoczny tylko, jeśli zaznaczyłeś już jakąś kartę..
        /// </summary>
        internal static string MoreThanOneCardText02 {
            get {
                return ResourceManager.GetString("MoreThanOneCardText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak rozpoznać kartę zmienioną w jokera?.
        /// </summary>
        internal static string PlayerCardsWithChangedJokerHeading {
            get {
                return ResourceManager.GetString("PlayerCardsWithChangedJokerHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Po zmianie jednej z Twoich kart w jokera - np. przed wykonaniem ruchu, będzie on widoczny jak karta, w która zmieniłes jokera - np. Król serce. Żeby istniała możłiwość odróznienia tej karty od prawdziwego króla serce, po lewej stronie zmienionej karty pojawia się czerwony napis &quot;joker&quot;. Właśnie to sygnalizuje kartę, króa została zmieniona z jokera w inną.
        ///Jeśli tę karte położysz na stół, napis &quot;joker&quot; nie jest już wyświetlany, podobnie w przypadku kontrolki wybranych przez Ciebie kart do położenia na stole [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PlayerCardsWithChangedJokerText01 {
            get {
                return ResourceManager.GetString("PlayerCardsWithChangedJokerText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string PlayerCardsWithChangedJokerText02 {
            get {
                return ResourceManager.GetString("PlayerCardsWithChangedJokerText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kiedy można wykonać ruch?.
        /// </summary>
        internal static string PossibilityOfMoveHeading {
            get {
                return ResourceManager.GetString("PossibilityOfMoveHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gracze wykonuja ruchy po sobie, w kierunku zgodnym z ruchem wskazówek zegara. Fakt, że teraz Ty wykonujesz ruch możesz rozpoznać po tym, że Twoja nazwa (imię), pod Twoim avatarem w oknie gry jest podświetlona na kolor złoty. Poza tym, jeśli to Twoja kolej, Twoje karty będę się animować, jeśli będziesz najeżdżał na nie kursorem myszy. Oba te zjawiska przedstwione sa na poniższym obrazku..
        /// </summary>
        internal static string PossibilityOfMoveText01 {
            get {
                return ResourceManager.GetString("PossibilityOfMoveText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak widzisz, nazwa gracza (w tym przypadku &quot;User&quot;) jest podświetlona na złoto, a także, karta (tutaj dziesiątka karo) powiększyła się po najechaniu na nią myszą..
        /// </summary>
        internal static string PossibilityOfMoveText02 {
            get {
                return ResourceManager.GetString("PossibilityOfMoveText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak żądać figur?.
        /// </summary>
        internal static string RankDemandingHeading {
            get {
                return ResourceManager.GetString("RankDemandingHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kiedy to Twoja kolej ruchu, i kiedy kontrolka z Twoimi kartami jest aktywna, możesz położyć na stole waleta (jeśli masz go w kartach i jeśli pasuje do kontekstu gry). Jeśli walet to pierwsza karta jaką wybierasz do wyłożenia na stole w ramach bieżącego ruchu, na ekranie automatycznie pojawi się okno z wyborem żądania figury. Możesz nie korzystać z opcji żądania - wtedy wciśnij przysick &quot;Anuluj&quot; w tym oknie. Nie sugeruj sie kolorem kart pokazanych w tym okienku - mają one taki sam kolor jak walet, którego kl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RankDemandingText01 {
            get {
                return ResourceManager.GetString("RankDemandingText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Omawiane okno przedstaione jest na powyższej grafice. Wybrana przez Ciebie figura podświetlona zostanie na niebiesko, natomiast najechanie myszą na którąkolwiek z figur spowoduje jej podświetlenie na inny odcień niebieskiego..
        /// </summary>
        internal static string RankDemandingText02 {
            get {
                return ResourceManager.GetString("RankDemandingText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Informacja o czekaniu kolejek.
        /// </summary>
        internal static string StopsAmountInfoHeading {
            get {
                return ResourceManager.GetString("StopsAmountInfoHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli zdaży się tak, że to Ty jesteś graczem, któremu wypadnie konieczność czekania kilku kolejek, Twoje kontrolki zostaną zablokowane, a na tle głównej kontrolki - kontrolki Twoich kart, pojawi się informacja z liczbą kolejek, które jeszcze musisz pominąć - zdjęcie poniżej. Liczba kolejek do czekania będzie się sykcesywnie zmniejszać, wraz z postępowaniem ruchów Twoich rywali - aż do momentu, gdy liczba ta spadnie do zera i będziesz mógł wykonać swój ruch..
        /// </summary>
        internal static string StopsAmountInfoText01 {
            get {
                return ResourceManager.GetString("StopsAmountInfoText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string StopsAmountInfoText02 {
            get {
                return ResourceManager.GetString("StopsAmountInfoText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jak żądać koloru?.
        /// </summary>
        internal static string SuitDemandingHeading {
            get {
                return ResourceManager.GetString("SuitDemandingHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analogicznie do możliwości żądania figury - jeśli pierwszą kartą, jaką zdecydujesz sie położyć na stole jest as, wówczas na ekranie wyświetli się okno z możliwością wyboru żądanego koloru. Oczywiście, tak jak w przypadku żądania figur, opcję żądania koloru także można anulować (nie korzystać z niej) - wyztarczy wcisnąć przycisk &quot;Anuluj&quot;. Tutaj również działa podświetlanie wybranego koloru na niebiesko..
        /// </summary>
        internal static string SuitDemandingText01 {
            get {
                return ResourceManager.GetString("SuitDemandingText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Po dokonaniu wyboru, należy go potwierdzić przyciskiem &quot;OK&quot;. Jeśli żaden kolor nie został jeszcze wybrany, a przycisk &quot;OK&quot; zostanie wciśnięty, wówczas na ekranie pojawi się stosowny komunikat, a wyboru trzeba będzie faktycznie dokonać..
        /// </summary>
        internal static string SuitDemandingText02 {
            get {
                return ResourceManager.GetString("SuitDemandingText02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Czekanie kolejek.
        /// </summary>
        internal static string WaitingInStopsModeHeading {
            get {
                return ResourceManager.GetString("WaitingInStopsModeHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jeśli w trybie postojów, zdecydujesz się czekac kolejki (pomimo posiadania jokera lub czwórki), w kontrolce kart wybranych przez Ciebie, pojawi się przycisk &quot;Czekaj...&quot;. Jego wciśnięcie spowoduje teo, że to Ty będziesz czekał kolejki..
        /// </summary>
        internal static string WaitingInStopsModeText01 {
            get {
                return ResourceManager.GetString("WaitingInStopsModeText01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string WaitingInStopsModeText02 {
            get {
                return ResourceManager.GetString("WaitingInStopsModeText02", resourceCulture);
            }
        }
    }
}
