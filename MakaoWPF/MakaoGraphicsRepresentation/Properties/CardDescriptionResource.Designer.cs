//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MakaoGraphicsRepresentation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CardDescriptionResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CardDescriptionResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MakaoGraphicsRepresentation.Properties.CardDescriptionResource", typeof(CardDescriptionResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asy.
        /// </summary>
        internal static string AceCard01 {
            get {
                return ResourceManager.GetString("AceCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As to karta funkcyjna, pozwala na zażądanie koloru - pik, kier, trefl albo karo. Przy zagrywaniu tej karty nie jest koniecznym defuniowanie żądanego koloru - wówczas na asa należy położyć kartę zgodną z kolorem wyłożonego wcześniej asa. Tak jak w przypadku Waletów, żądanie koloru może zostać przebite przez kolejnego gracza - z wykorzystaniem innego asa. Różnicą natomiast jest fakt, że żądanie koloru kończy się z pierwszą kartą położoną na stół, której kolor jest równy żądanemu kolorowi..
        /// </summary>
        internal static string AceCard02 {
            get {
                return ResourceManager.GetString("AceCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ósemki.
        /// </summary>
        internal static string EightCard01 {
            get {
                return ResourceManager.GetString("EightCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ósemka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string EightCard02 {
            get {
                return ResourceManager.GetString("EightCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Piątki.
        /// </summary>
        internal static string FiveCard01 {
            get {
                return ResourceManager.GetString("FiveCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Piątka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string FiveCard02 {
            get {
                return ResourceManager.GetString("FiveCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Czwórki.
        /// </summary>
        internal static string FourCard01 {
            get {
                return ResourceManager.GetString("FourCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Czwórka jest kartą waleczną, niebitewną. Karta ta służy do zatrzymywania ruchu innego gracza. Jeśli poprzedni gracz położy czwórkę na stół, możesz położyć na stół następną czwórkę lub jokera (zmieniając go uprzednio w czwórkę). Jeśli nie masz w ręku kolejnej czwórki lub jokera, to Ty jesteś graczem, który będzie czekał.
        ///
        ///Ilość kolejek czekania jest równa liczbie czwórek położonych na stole. Położenie czwórki na stole jest jednoznaczne z tym, że któryś gracz będzie musiał czekać co najmniej jedną kolejkę..
        /// </summary>
        internal static string FourCard02 {
            get {
                return ResourceManager.GetString("FourCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walety.
        /// </summary>
        internal static string JackCard01 {
            get {
                return ResourceManager.GetString("JackCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walet jest kartą funkcyjną. Dzięki tej karcie możesz żądać innych figur. Możliwe jest także zagranie tej karty, nie żądając przy tym żadnej figury. Zagrywając tę kartę, możesz żądać: piątek, szóstek, siódemek, ósemek, dziewiątek, dziesiątek, a także dam. Po określeniu żądanej figury, następny gracz zobowiązany jest wyłożyć żądaną figurę na stół (ze swoich kart). Jeśli nie ma takiej karty w ręku, musi wziąć kartę ze stosu nowych kart. Następny gracz może także przebić Twoje żądanie (pod warunkiem, że sam ma  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JackCard02 {
            get {
                return ResourceManager.GetString("JackCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jokery.
        /// </summary>
        internal static string JokerCard01 {
            get {
                return ResourceManager.GetString("JokerCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joker to potężna karta, gdyż może zostać zmieniony w dowolną kartę z talii, tzn. dowolna figura i dowolny kolor. Po zmianie w inną kartę, można użyć jej zgodnie z zasadami dotyczącymi konkretnej karty. Po wykorzystaniu jokera, gdy kart w talii na stole jest zbyt mało i zużyte karty zostają zabrane ze stołu, potasowane i umieszczone z powrotem w talii, karta ta jest automatycznie przywrócona do postaci jokera..
        /// </summary>
        internal static string JokerCard02 {
            get {
                return ResourceManager.GetString("JokerCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Króle.
        /// </summary>
        internal static string KingCard01 {
            get {
                return ResourceManager.GetString("KingCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Króle można podzielić na waleczne i niewaleczne. Te waleczne (i bitewne jednocześnie) to król pik i kier, a te niewaleczne to trefl i karo. Króle niewaleczne zachowują się jak pozostałe niewaleczne karty, jedyną różnicą jest fakt, że króli nie można żądać za pomocą Waleta. Natomiast króle waleczne (pik i kier) położone na stół rozpoczynają trub bitwy (zobacz &quot;Tryby gry&quot;). Położenie jednego z tych króli na stół, zwiększa liczbę kart do wzięcia przez pokonanego gracza o 5. Dodatkowo, te karty można położyć na [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KingCard02 {
            get {
                return ResourceManager.GetString("KingCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dziewiątki.
        /// </summary>
        internal static string NineCard01 {
            get {
                return ResourceManager.GetString("NineCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dziewiątka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string NineCard02 {
            get {
                return ResourceManager.GetString("NineCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damy.
        /// </summary>
        internal static string QueenCard01 {
            get {
                return ResourceManager.GetString("QueenCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dama jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string QueenCard02 {
            get {
                return ResourceManager.GetString("QueenCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Siódemki.
        /// </summary>
        internal static string SevenCard01 {
            get {
                return ResourceManager.GetString("SevenCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Siódemka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string SevenCard02 {
            get {
                return ResourceManager.GetString("SevenCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Szóstki.
        /// </summary>
        internal static string SixCard01 {
            get {
                return ResourceManager.GetString("SixCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Szóstka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string SixCard02 {
            get {
                return ResourceManager.GetString("SixCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dziesiątki.
        /// </summary>
        internal static string TenCard01 {
            get {
                return ResourceManager.GetString("TenCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dziesiątka jest kartą niewaleczną. Zagranie tej karty nie niesie za sobą żadnych negatywnych skutków dla żadnego z graczy. Karty tej można natomiast żądać (tylko niewaleczne karty), wykorzystując do tego Waleta. Kartę tę można położyć na stół jedynie w przypadku podstawowego trybu gry (zobacz &quot;Tryby gry&quot;), lub gdy inny gracz żąda tej figury..
        /// </summary>
        internal static string TenCard02 {
            get {
                return ResourceManager.GetString("TenCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trójki.
        /// </summary>
        internal static string ThreeCard01 {
            get {
                return ResourceManager.GetString("ThreeCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trójka jest kartą waleczną, bitewną. Oznacza to, że w przypadku potyczki (bitwy), karta ta położona na stół zwiększa liczbe kart, jaką musi wziąć pokonany gracz ze stosu kart na stole, o trzy. Położenie tej karty na stół jest jednoznaczne z rozpoczęciem bitwy.
        ///
        ///W przypadku bitwy, kartę tę można położyć na dowolną inną waleczna kartę, o takim samym kolorze. Np. trójkę pik, można położyć na dwójce lub Królu pik..
        /// </summary>
        internal static string ThreeCard02 {
            get {
                return ResourceManager.GetString("ThreeCard02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dwójki.
        /// </summary>
        internal static string TwoCard01 {
            get {
                return ResourceManager.GetString("TwoCard01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dwójka jest kartą waleczną, bitewną. Oznacza to, że w przypadku potyczki (bitwy), karta ta położona na stół zwiększa liczbe kart, jaką musi wziąć pokonany gracz ze stosu kart na stole, o dwie. Położenie tej karty na stół jest jednoznaczne z rozpoczęciem bitwy.
        ///
        ///W przypadku bitwy, kartę tę można położyć na dowolną inną waleczna kartę, o takim samym kolorze. Np. dwójkę pik, można położyć na trójce lub Królu pik..
        /// </summary>
        internal static string TwoCard02 {
            get {
                return ResourceManager.GetString("TwoCard02", resourceCulture);
            }
        }
    }
}
